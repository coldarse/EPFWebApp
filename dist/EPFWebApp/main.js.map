{"version":3,"sources":["./src/environments/environment.ts","./src/app/language/language.component.ts","./src/app/language/language.component.html","./src/app/verify-my-kad/verify-my-kad.component.ts","./src/app/verify-my-kad/verify-my-kad.component.html","./src/app/_models/_currentMyKadDetails.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/_models/_signalRConnection.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SignalR } from 'ng2-signalr';\r\nimport { signalRConnection } from '../_models/_signalRConnection';\r\n\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.css']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _signalR: SignalR,\r\n    private route: Router,\r\n  ) {\r\n    this.startConnection();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  startConnection() : void {\r\n    this._signalR.connect().then((c) => {\r\n      signalRConnection.connection = c;\r\n      console.log(\"SignalR Connection is now established! \" + formatDate(new Date(), 'HH:MM:ss', 'en'));\r\n      this.route.navigate(['verifyMyKad']);\r\n    }).catch((err: any) => {\r\n      //Catch Error\r\n    });\r\n  }\r\n\r\n}\r\n","<p>language works!</p>\r\n","import { formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { signalRConnection } from '../_models/_signalRConnection';\r\n\r\n\r\ndeclare const loadKeyboard: any;\r\ndeclare const deleteKeyboard: any;\r\ndeclare const closeKeyboard: any;\r\n\r\n@Component({\r\n  selector: 'app-verify-my-kad',\r\n  templateUrl: './verify-my-kad.component.html',\r\n  styleUrls: ['./verify-my-kad.component.css']\r\n})\r\nexport class VerifyMyKadComponent implements OnInit {\r\n\r\n  Status = \"MyKad\";\r\n  intervalID: any;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private translate: TranslateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.translate.use('en');\r\n    this.intervalID = setInterval(() => {\r\n      this.DetectMyKad();\r\n      if (signalRConnection.cardDetect == true) {\r\n        clearInterval(this.intervalID);\r\n        this.verify();\r\n      } \r\n    }, 1000);\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    try{\r\n      loadKeyboard();\r\n      //signalrConnection.logsaves.push(formatDate(new Date(), 'M/d/yyyy h:MM:ss a', 'en') + \" \" + \"WebApp Component [Account Registration]\" + \": \" + \"After form is loaded, initialized keyboard\");\r\n    }catch(e: any){\r\n      //signalrConnection.logsaves.push(formatDate(new Date(), 'M/d/yyyy h:MM:ss a', 'en') + \" \" + \"WebApp Component [Account Registration]\" + \": \" + \"Error initializing keyboard.\" + e.toString());\r\n    }\r\n  }\r\n\r\n\r\n  DetectMyKad(): boolean {\r\n    return signalRConnection.connection.invoke('IsCardDetected').then((data: boolean) => {\r\n      signalRConnection.cardDetect = data;\r\n    });\r\n  }\r\n\r\n  verify() : void {\r\n    try {\r\n      // First Invoke\r\n      signalRConnection.connection.invoke('myKadRequest', this.Status).then((data: any) => {\r\n        this.Status = data;\r\n        // Not ScanThumb\r\n        if(data.toLowerCase().includes(\"error\")){\r\n          console.log(data);\r\n        }\r\n        if(this.DetectMyKad()){\r\n          signalRConnection.connection.invoke('myKadRequest', this.Status).then((data: any) => {\r\n            if (data.toUpperCase().includes(\"SCANTHUMB\")){\r\n              this.Status = data;\r\n              if(this.DetectMyKad()){\r\n                signalRConnection.connection.invoke('ScanThumbprint').then((data: any) => {\r\n                  this.Status = data;\r\n                  if (this.Status.toUpperCase().includes(\"MISMATCH\")){\r\n                    console.log(data);\r\n                  }\r\n                  else if(data.toUpperCase().includes(\"MATCH\")){\r\n                    console.log(data);\r\n                  }\r\n                  else if(data.toUpperCase().includes(\"TIMEOUT\")){\r\n                    console.log(data);\r\n                  }\r\n                  else{\r\n                    console.log(data);\r\n                  }\r\n                }); \r\n              }\r\n            }\r\n            else{\r\n              if (data.toLowerCase().includes(\"invalid\")){\r\n                //retry\r\n                // if(this.tryCountCard == 0){\r\n                //   this.loadingVisible = false;\r\n                //   this.insertMykadVisible = true;\r\n                //   this.InvalidCardVisibleFinal = true;\r\n                // }\r\n                // else{\r\n                //   this.loadingVisible = false;\r\n                //   this.insertMykadVisible = true;\r\n                //   this.InvalidCardVisible = true;\r\n                // }\r\n                console.log(data);\r\n              }else{\r\n                console.log(data);\r\n              }\r\n            }    \r\n          });\r\n        }\r\n      });\r\n    }\r\n    catch (e: any){\r\n      \r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<p>{{Status}}</p>\r\n\r\n<p>{{'Hello' | translate}}</p>\r\n\r\n<input  type=\"text\" class=\"input-long use-keyboard-input \" id=\"AR1\">\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class currentMyKadDetails {\r\n    static Name : string;\r\n    static ICNo : string;\r\n    static OldICNo : string;\r\n    static DOB : Date;\r\n    static POB : string;\r\n    static Gender : string;\r\n    static Citizenship : string;\r\n    static IssueDate : Date;\r\n    static Race : string;\r\n    static Religion : string;\r\n    static Address1 : string;\r\n    static Address2 : string;\r\n    static Address3 : string;\r\n    static PostCode : string;\r\n    static City : string;\r\n    static State : string;\r\n    static Country : string;\r\n    static Address : string;\r\n    static RJ : string;\r\n    static KT : string;\r\n    static GreenCardNationality : string;\r\n    static GreenCardExpiryDate : Date;\r\n    static CardVersion : string;\r\n    static OtherID : string;\r\n    static CategoryType : string;\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'EPFWebApp';\r\n}\r\n","<router-outlet>\r\n</router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SignalRConfiguration, SignalRModule } from 'ng2-signalr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { currentMyKadDetails } from './_models/_currentMyKadDetails';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { signalRConnection } from './_models/_signalRConnection';\r\nimport { VerifyMyKadComponent } from './verify-my-kad/verify-my-kad.component';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { MultiTranslateHttpLoader } from \"ngx-translate-multi-http-loader\";\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n// import { JsonAppConfigService } from './config/json-app-config.service';\r\n\r\nexport function createConfig(): SignalRConfiguration {\r\n  const c = new SignalRConfiguration();\r\n  c.hubName = 'MyMessageHub';\r\n  c.qs = { user: 'aldan' }\r\n  c.url = 'http://localhost:8081/';\r\n  c.logging = true;\r\n\r\n  \r\n  // >= v5.0.0\r\n  c.executeEventsInZone = true; // optional, default is true\r\n  c.executeErrorsInZone = false; // optional, default is false\r\n  c.executeStatusChangeInZone = true; // optional, default is true\r\n  return c;\r\n}\r\n\r\n// export function initializerFn(jsonAppConfigService: JsonAppConfigService) {\r\n//   return () => {\r\n//     return jsonAppConfigService.load();\r\n//   };\r\n// }\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LanguageComponent,\r\n    VerifyMyKadComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n    SignalRModule.forRoot(createConfig),\r\n  ],\r\n  providers: [\r\n    currentMyKadDetails,\r\n    signalRConnection,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new MultiTranslateHttpLoader(http, [\r\n    { prefix: \"./assets/translate/\", suffix: \".json\" },\r\n  ]);\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class signalRConnection {\r\n    static connection: any;\r\n    static cardDetect: boolean;\r\n    static logsaves: string[];\r\n    static kioskCode: string;\r\n    static kioskID: string;\r\n    static trxno : string;\r\n    static isHardcodedIC : boolean;\r\n    static kioskType: string;\r\n    static branchName: string;\r\n    static isVerifyMyKad = false;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { VerifyMyKadComponent } from './verify-my-kad/verify-my-kad.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/language', pathMatch: 'full'},\r\n  {path: 'language', component: LanguageComponent},\r\n  {path: 'verifyMyKad', component: VerifyMyKadComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}